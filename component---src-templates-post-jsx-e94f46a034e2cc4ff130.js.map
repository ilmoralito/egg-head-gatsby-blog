{"version":3,"sources":["webpack:///./src/templates/post.jsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_ref","data","pageContext","prev","next","console","log","a","createElement","markdownRemark","frontmatter","title","dangerouslySetInnerHTML","__html","html","to","path","m","module","exports","require","default","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","Fragment","props","children","Consumer","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAGeE,EAAA,iBAAAO,GAA2B,IAAxBC,EAAwBD,EAAxBC,KAAMC,EAAkBF,EAAlBE,YACdC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KAId,OAFAC,QAAQC,IAAIH,EAAMC,GAGhBP,EAAAU,EAAAC,cAAA,WACEX,EAAAU,EAAAC,cAAA,UAAKP,EAAKQ,eAAeC,YAAYC,OACrCd,EAAAU,EAAAC,cAAA,OAAKI,wBAAyB,CAAEC,OAAQZ,EAAKQ,eAAeK,QAE3DX,GAAQN,EAAAU,EAAAC,cAACT,EAAA,EAAD,CAAMgB,GAAIZ,EAAKO,YAAYM,MAA3B,QACRZ,GAAQP,EAAAU,EAAAC,cAACT,EAAA,EAAD,CAAMgB,GAAIX,EAAKM,YAAYM,MAA3B,UAKR,IAAMrB,EAAK,kCCnBlB,IAAsBsB,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C1B,EAAAG,EAAAD,EAAA,sBAAA6B,IAAA,IAAA1B,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAA2B,EAAAhC,EAAA,IAAAiC,EAAAjC,EAAAO,EAAAyB,GAAAhC,EAAAG,EAAAD,EAAA,sBAAA+B,EAAAjB,IAAAhB,EAAA,KAAAA,EAAA,GAcyBkC,QAAOC,QAdhC,IAgBMC,EAAqBC,IAAMC,cAAc,IAE/C,SAASC,EAAT9B,GAA2E,IAAxC+B,EAAwC/B,EAAxC+B,gBAAiB9B,EAAuBD,EAAvBC,KAAMN,EAAiBK,EAAjBL,MAAOqC,EAAUhC,EAAVgC,OACzDC,EAAYhC,EACdA,EAAKA,KACL8B,EAAgBpC,IAAUoC,EAAgBpC,GAAOM,KAErD,OACEJ,EAAAU,EAAAC,cAACX,EAAAU,EAAM2B,SAAP,KACGD,GAAaD,EAAOC,IACnBA,GAAapC,EAAAU,EAAAC,cAAA,qCAKrB,IAAMc,EAAc,SAAAa,GAAS,IACnBlC,EAAkCkC,EAAlClC,KAAMN,EAA4BwC,EAA5BxC,MAAOqC,EAAqBG,EAArBH,OAAQI,EAAaD,EAAbC,SAE7B,OACEvC,EAAAU,EAAAC,cAACmB,EAAmBU,SAApB,KACG,SAAAN,GAAe,OACdlC,EAAAU,EAAAC,cAACsB,EAAD,CACE7B,KAAMA,EACNN,MAAOA,EACPqC,OAAQA,GAAUI,EAClBL,gBAAiBA,kFCnBZO,UAjBU,SAAAtC,GAAiC,IAA9BuC,EAA8BvC,EAA9BuC,SAAUC,EAAoBxC,EAApBwC,cACpC,OAAKA,EAGEZ,IAAMpB,cAAciC,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV","file":"component---src-templates-post-jsx-e94f46a034e2cc4ff130.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\n\nexport default ({ data, pageContext }) => {\n  const { prev, next } = pageContext\n\n  console.log(prev, next)\n\n  return (\n    <div>\n      <h1>{data.markdownRemark.frontmatter.title}</h1>\n      <div dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }} />\n\n      {prev && <Link to={prev.frontmatter.path}>Prev</Link>}\n      {next && <Link to={next.frontmatter.path}>Next</Link>}\n    </div>\n  )\n}\n\nexport const query = graphql`\n  query($pathSlug: String!) {\n    markdownRemark(frontmatter: { path: { eq: $pathSlug } }) {\n      frontmatter {\n        title\n      }\n      html\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}